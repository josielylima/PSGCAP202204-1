--CRIANDO A SP
CREATE PROCEDURE SP_INATIVAR_FUNCIONARIOS_ALEATORIAMENTE
	@CONTADORFINAL INT
AS
BEGIN
	DECLARE @TOTALREGISTROS INT
	DECLARE @CHAVEINICIAL INT
	DECLARE @CHAVESELECIONADA INT
	DECLARE @QTDE INT
	DECLARE @CONTADORINICIAL INT
	--DECLARE @CONTADORFINAL INT
	DECLARE @TABELACHAVE TABLE(CHAVE INT NOT NULL PRIMARY KEY)
	DECLARE @VERIFICACHAVE INT

	SET @CONTADORINICIAL = 0
	--SET @CONTADORFINAL = 1000
	WHILE (@CONTADORINICIAL <= @CONTADORFINAL)
	BEGIN
		SET @QTDE = 0
		SET @VERIFICACHAVE = 0
		WHILE(@QTDE = 0)
		BEGIN
			SET @TOTALREGISTROS = (SELECT COUNT(*) FROM FuncionarioTemp)
			SET @CHAVEINICIAL = (SELECT MIN(ID_Funcionario) FROM FuncionarioTemp)
			SET @CHAVESELECIONADA = (SELECT FLOOR(RAND()*(@TOTALREGISTROS-@CHAVEINICIAL)+@CHAVEINICIAL))
			SET @QTDE = (SELECT COUNT(*) 
				FROM FuncionarioTemp 
				WHERE (ID_Funcionario = @CHAVESELECIONADA) 
				AND (Situacao = 1))
		END
		SET @VERIFICACHAVE = (SELECT COUNT(*) FROM @TABELACHAVE WHERE CHAVE = @CHAVESELECIONADA)
		IF (@VERIFICACHAVE = 0)
		BEGIN
			INSERT INTO @TABELACHAVE(CHAVE) VALUES (@CHAVESELECIONADA)
			SET @CONTADORINICIAL = @CONTADORINICIAL + 1
		END
	END

	DECLARE DB_CURSOR CURSOR FOR
		SELECT CHAVE FROM @TABELACHAVE

	DECLARE @CHAVE INT

	OPEN DB_CURSOR 
		FETCH NEXT FROM DB_CURSOR INTO @CHAVE 

	WHILE @@FETCH_STATUS = 0  
	BEGIN  
		UPDATE FuncionarioTemp
			SET Situacao = 0
			WHERE ID_Funcionario = @CHAVE

		FETCH NEXT FROM DB_CURSOR INTO @CHAVE 
	END 

	CLOSE DB_CURSOR  
	DEALLOCATE DB_CURSOR 
END
GO

-------------------------------------------------

--TESTANDO A SP
EXEC SP_INATIVAR_FUNCIONARIOS_ALEATORIAMENTE 175
GO

--SELECT * FROM FuncionarioTemp WHERE Situacao = 0
SELECT COUNT(*) AS ATIVOS FROM FuncionarioTemp WHERE Situacao = 1
SELECT COUNT(*) AS INATIVOS FROM FuncionarioTemp WHERE Situacao = 0
GO
